{
  "workflow_description": {
    "name":"chipseq_analysis",
    "version": 1.0,
    "label":"ChIP-seq peak calling",
    "type":"chipseq_analysis",
    "inputs":[
      "mapped/*.bam*"
    ],
    "inputs_optional":[
      "gene_sets/*",
      "qc_reports/*/phantompeakqual/*",
      "qc_reports/all_samples/deeptools/*",
      "qc_reports/*/qc_samtools/*"
    ],
    "outputs":[
      "mapped/*",
      "logs/*",
      "results/*",
      "final_report*"
    ],
    "outputs_optional":[
      "gene_sets/*"
    ],
    "report_index": "final_report.html",
    "reports":[
      "final_report.html"
    ]
  },
  "general_params": [
    "entity_name",
    "sample_name"
  ],
  "requested_params": [
    "reference"
  ],
  "gui_params" : {
    "primary": {
      "reference": {
        "label": "Genomic Reference",
        "type": "enum",
        "default": ##INCLUDE:reference_info/default_reference.json##,
        "list": ##INCLUDE:reference_info/reference.json##
      },
      "fragment_length": {
        "label": "Fragment length",
        "type": "string",
        "default": "unk"
      },
      "effective_genome_size": {
        "label": "Effective genome size",
        "type": "string",
        "default": "unk"
      }
    },
    "detailed": {
      "quality_cutoff": {
        "label": "Alignment quality cutoff",
        "type": "int",
        "default": 20
      },
      "top_peaks": {
        "label": "Top peaks",
        "type": "int",
        "default": 10
      },
      "peak_annot_over": {
        "label": "Annotate peaks over",
        "type": "string",
        "default": "gene"
      },
      "peak_annot_by": {
        "label": "Annotate peaks by",
        "type": "string",
        "default": "gene_name,gene_id"
      },
      "conds_to_compare": {
        "label": "Conditions to compare",
        "type": "string",
        "default": "all"
      },
      "gene_sets": {
        "label": "Genes of interest",
        "type": "string",
        "default": "all_genes"
      }
    },
    "samples": {
      "condition": {
        "label": "Condition",
        "type": "string",
        "default": ""
      },
      "is_control": {
        "label": "Is control?",
        "type": "bool",
        "default": false
      },
      "tag": {
        "label": "Replicate",
        "type": "string",
        "default": ""
      },
      "control": {
        "label": "Control to use",
        "type": "string",
        "default": ""
      }
    }
  }
}


